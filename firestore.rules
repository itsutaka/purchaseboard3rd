rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check if a user has a specific role
    function hasRole(role) {
      return request.auth != null && getUserData(request.auth.uid).roles.hasAny([role]);
    }

    // Rules for the 'users' collection itself
    match /users/{userId} {
      // Users can read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;
      // Admins can read any user profile
      allow read: if hasRole('admin');
      // Only admins can create, update, or delete user profiles/roles
      allow write: if hasRole('admin');
    }

    // Requirements rules (existing)
    match /requirements/{requirementId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Tithing Subsystem Rules (Advanced) - TEMPORARILY OPEN FOR DEBUGGING
    match /tithe/{taskId} {
      // Temporarily allow all access for debugging
      allow read, write: if true;

      // Rules for the 'dedications' subcollection
      match /dedications/{dedicationId} {
        // Temporarily allow all access for debugging
        allow read, write: if true;
      }
    }
  }
}